		REACT NATIVE

import { StatusBar } from 'expo-status-bar';
import React, {useState} from 'react';
import { StyleSheet, Text, View, Button, TextInput, ScrollView, FlatList, TouchableOpacity}  from 'react-native';

export default function App() {
  /*const[name, stateName] = useState('shaun'); //name of piece of state, function that updates that state, gli viene passato il valore iniziale dello state
  const [person, setPerson] = useState({ name: 'mario', age: 40});
  const [age, setAge] = useState('30');

    //call these function whatever you want (both setName and clickHandler)
  const clickHandler = () => {
    stateName('chun-li');
    setPerson({name: 'luigi', age: 45});
  }*/

 /*  const [people, setPeople] = useState([
    { name: 'shaun', id: '1'},
    { name: 'yoshi', id: '2'},
    { name: 'mario', id: '3'},
    { name: 'luigi', id: '4'},
    { name: 'peach', id: '5'},
    { name: 'toad', id: '6'},
    { name: 'bowser', id: '7'},
  ]);

  const pressHandler = (id) => {
    console.log(id);              //can see console from webpage opened after nmp start
    setPeople((prevPeople) => {
      return prevPeople.filter(person => person.id != id)     //filter goes through an array and when condition is true that element is kept, false -> deleted
    })
  } */

  return (
    <View style={styles.container}>

    


    {/* <FlatList 
      numColumns={2}
      idExtractor={(item) => item.id}
      data={people}
      renderItem={({ item }) => (
        <TouchableOpacity onPress={() => pressHandler(item.id)}>   {/* when press on the item the anonymous function is fired, this function calls pressHandler and passes the id of the current item to it *
          <Text style={styles.item}>{item.name}</Text>
        </TouchableOpacity> 
      )}
    /> */}

      {/* <ScrollView>
        {people.map(item => (
            <View id={item.id}>
              <Text style={styles.item}>{item.name}</Text>
            </View>
        ))}
      </ScrollView> */}

      {/*<View>
        <Text>Enter name:</Text>
        <TextInput  
          multiline
          style={styles.input} 
          placeholder='e.g. Jhon Doe' 
          onChangeText={(val) => stateName(val)} 
        />
        <Text>Enter age:</Text>
        <TextInput  
          idboardType='numeric'
          style={styles.input} 
          placeholder='e.g. 99' 
          onChangeText={(val) => stateAge(val)} 
        />  
        <Text>name: {name}, age: {age}</Text>
      </View>*/}
        
      {/*<View>
        <Text>My name is {name}</Text>
        <Text>His name is {person.name} and his age is {person.age}</Text>
        <View style={styles.buttonContainer}>
          <Button title='update state' onPress={clickHandler} />       {/* in react you can't style the button directly *
        </View>
      </View>*/}

       {/*<View style={styles.header}>
        <Text>Hello world!</Text>
      </View> 
      <View style={styles.body}>
        <Text>Lorem ipsum dolor sit, amet</Text>
        <Text>Lorem ipsum dolor sit, amet</Text>
        <Text>Lorem ipsum dolor sit, amet</Text>
      </View>*/}
      <StatusBar style="auto" />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    //alignItems: 'center',          commentato per la lista
    //justifyContent: 'center',
    paddingTop: 40,
    paddingHorizontal: 20
  },
/*  header: {
    backgroundColor: 'pink',
    padding: 20,
  },
  boldText: {
    fontWeight: 'bold',
  },
  body: {
    backgroundColor: 'yellow',
    padding: 20,
  },
  buttonContainer: {
    marginTop: 20
  },
  input: {
    borderWidth: 1,
    borderColor: '#777',
    padding: 8,
    margin: 10,
    width: 200,
  },*/
  item: {
    marginTop: 30,
    padding: 30,
    backgroundColor: 'pink',
    fontSize: 24,
    marginHorizontal: 10,
    marginTop: 24,
  }
});
